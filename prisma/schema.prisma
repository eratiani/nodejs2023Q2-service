generator client {
  provider      = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String @unique
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Artist {
  id     String  @id @default(uuid())
  name   String
  grammy Boolean @default(false)

  albums    Album[]
  tracks    Track[]
  FavArtist FavArtist[]
}

model Album {
  id       String  @id @default(uuid())
  name     String
  year     Int
  artistId String?

  artist Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks Track[]

  FavAlbum FavAlbum[]
}

model Track {
  id       String  @id @default(uuid())
  name     String
  artistId String?
  albumId  String?
  duration Int

  artist   Artist?   @relation(fields: [artistId], references: [id], onDelete: SetNull)
  album    Album?    @relation(fields: [albumId], references: [id], onDelete: SetNull)
  FavTrack FavTrack[]
}

model FavArtist {
  artist   Artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId String @unique
}

model FavAlbum {
  album   Album  @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId String @unique
}

model FavTrack {
  track   Track  @relation(fields: [trackId], references: [id], onDelete: Cascade)
  trackId String @unique
}